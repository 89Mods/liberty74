print_stats

# necessary flop cleanup
#   without it raises the following for latch with init-val=1
#   Assertion `Abc_NodeIsBuf(pFanin)' failed
#   Todo: change Yosys behavior so it changes init-val=1 to init-val=0 with input and output inverter
# strash
# scleanup
strash

alias b balance
alias rw rewrite
alias rwz rewrite -z
alias rf refactor
alias rfz refactor -z
alias rs resub
alias rsz resub -z
alias resyn2      "b; rw; rf; b; rw; rwz; b; rfz; rwz; b"

# used by deepsyn?
alias compress2rs "b -l; rs -K 6 -l; rw -l; rs -K 6 -N 2 -l; rf -l; rs -K 8 -l; b -l; rs -K 8 -N 2 -l; rw -l; rs -K 10 -l; rwz -l; rs -K 10 -N 2 -l; b -l; rs -K 12 -l; rfz -l; rs -K 12 -N 2 -l; rwz -l; b -l"

rec_start3 yosys/rec6Lib_final_filtered3_recanon.aig

# main loop:
# Maybe remove -d from &b -> ignore delay
alias &opt_iter "&st; &if -y -K 6; &syn2; &if -K 6 -a; &st; &b"
# &if -y -K 6; &syn2; &if -K 6, see https://people.eecs.berkeley.edu/~alanmi/publications/2012/iccad12_lms.pdf
# &dc2 AIG rewriting (greedy minimization)
# &b   balance structure for depth
# &st  structural hashing
# &dc  compute structural choices
# &nf  select choice and map to tech
# &ps  print statistics
alias &map_iter "&st; &dch -x; &nf {D} -a; &ps"

# initial mapping iteration
&get -n
echo "Initial network:"
&ps
# This is pretty slow and mostly seems to optimize for area
# echo "AIG minimization using random FRAIG-ing..."
# 20 random inits, stop after 5 iters without improvement or 600s (10min)
# &st; &deepsyn -v -I 20 -J 5 -T 600; &b -d; &ps
echo "High effort delay optimization..."
&opt_iter; &opt_iter; &ps;
&opt_iter; &opt_iter; &ps;
&opt_iter; &opt_iter; &ps;
&opt_iter; &opt_iter; &ps;
&opt_iter; &opt_iter; &ps;
&opt_iter; &opt_iter; &ps;
&opt_iter; &opt_iter; &ps;
&opt_iter; &opt_iter; &ps;
&opt_iter; &opt_iter; &ps;
&opt_iter; &opt_iter; &ps;
&put

# according to https://people.eecs.berkeley.edu/~alanmi/abc/
# it can take up to 10-ish iterations for convergence
# in my experience it seems to get 99% there after 5-6 with a lower runtime
&get -n
echo "Optimization Iterations..."
# Map iter recovers area, while opt_iter for timing -> try only map_opt
&opt_iter; &map_iter;
&opt_iter; &map_iter;
&opt_iter; &map_iter;
&opt_iter; &map_iter;
&opt_iter; &map_iter;
&opt_iter; &map_iter;
&opt_iter; &map_iter;
&opt_iter; &map_iter;
&opt_iter; &map_iter;
&opt_iter; &map_iter;
&put
 
 
topo
stime

#write_blif "yosys/tmp.blif";
#read_lib  -w "pdk/lib/74lvc1g_typ_5p00V_25C.lib" ;
#read_blif "yosys/tmp.blif";


echo "buffering for delay and fanout..."
buffer -p
echo "resizing cells..."
upsize {D}
dnsize {D}
upsize {D}
dnsize {D}

echo "Final timing:"
stime
