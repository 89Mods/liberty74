% for cell in cells:
// ${cell['desc']}
module ${cell['name']} (
  % if pwr_pins:
  % for power_pin in cell['power']:
    input  logic ${power_pin['name']},
  % endfor
  % endif
  % for input in cell['inputs']:
    input  logic ${input['name']},
  % endfor
  % for idx, output in enumerate(cell['outputs']):
    output logic ${output['name']}\
    % if idx < len(cell['outputs']) - 1:
,
    % else:

    % endif
  % endfor
);
% for output in cell['outputs']:
  % if output['function'] == 'IQ':
    always_ff @(posedge ${cell['ff']['clocked_on']}\
    % if 'clear' in cell['ff']:
 or \
      % if '!' in cell['ff']['clear']:
negedge\
      % else:
posedge\
      % endif
 ${cell['ff']['clear'].replace('!', '')}) begin
        if (${cell['ff']['clear']})
            ${output['name']} <= '0;
        else
    \
    % else:
) begin
    % endif
        ${output['name']} <= ${cell['ff']['next_state']};
    end
  % elif 'verilog_function' in output:
    assign ${output['name']} = ${output['verilog_function']};
  % else:
    assign ${output['name']} = ${output['function']};
  % endif
% endfor
endmodule : ${cell['name']}

% endfor